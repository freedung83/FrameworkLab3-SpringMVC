<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan base-package="com.multicampus.biz"/>
	<aop:aspectj-autoproxy/>
	
	<!-- 1. DataSource 등록 -->
	<bean id="dataSource" 
	      class="org.apache.commons.dbcp.BasicDataSource"
	      destroy-method="close">
		<property name="driverClassName" 
		          value="oracle.jdbc.driver.OracleDriver"/>	
		 
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/> 
		<property name="username" value="system"/>	
		<property name="password" value="alsehfdl3231"/>
		<!-- <property name="url" 
		value="jdbc:oracle:thin:@169.140.123.10:1545:XERP"/>
		<property name="username" value="apps"/>	
		<property name="password" value="sept"/> -->
	</bean>
	
	<!-- 2. JdbcTemplate 등록 -->
	<bean id="jdbcTemplate" 
	      class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- Hibernate 연동 설정 -->
	<!-- AnnotationSessionFactoryBean 등록 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="annotatedClasses">
			<list>
				<value>com.multicampus.biz.board.vo.BoardVO</value>
				<value>com.multicampus.biz.user.vo.UserVO</value>
				<value>com.multicampus.biz.main.vo.MainVO</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory</prop>
				<prop key="hibernate_dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>	
	
	<!-- 2. SessionFactory를 이용한 HibernateTemplate 등록 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- iBatis 관련 설정 -->
	<!-- 1.sqlMapClientFactoryBean 등록 -->
	<bean id="sqlMapClientFactory" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="config/sql-map-config.xml" />
	</bean>

	<!-- 2.sqlMapClientTemplate 등록 -->
	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="sqlMapClientFactory" />
	</bean>
	
</beans>


